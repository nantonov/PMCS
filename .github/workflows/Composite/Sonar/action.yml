name: "Analyse code with sonar"

inputs:
  solution_path:
    description: "Path to the project to run commands"
    required: true

runs:
  using: "composite"
  steps:
  - name: Set up JDK 11
    uses: actions/setup-java@v1
    with:
      java-version: 1.11
  - uses: actions/checkout@v2
    with:
      fetch-depth: 0
  - name: Cache SonarCloud packages
    uses: actions/cache@v1
    with:
      path: ~\sonar\cache
      key: ${{ runner.os }}-sonar
      restore-keys: ${{ runner.os }}-sonar
  - name: Cache SonarCloud scanner
    id: cache-sonar-scanner
    uses: actions/cache@v1
    with:
      path: .\.sonar\scanner
      key: ${{ runner.os }}-sonar-scanner
      restore-keys: ${{ runner.os }}-sonar-scanner
  - name: Install SonarCloud scanner
    if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
    shell: powershell
    run: |
      New-Item -Path .\.sonar\scanner -ItemType Directory
      dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
  - name: Build and analyze
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    shell: powershell
    run: |
      .\.sonar\scanner\dotnet-sonarscanner begin /k:"nantonov_PMCS" /o:"nantonov" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build --configuration Release ${{inputs.project_path}}
        dotnet test ${{inputs.project_path}} --no-restore --no-build --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
